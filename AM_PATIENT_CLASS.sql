--------------------------------------------------------
--  File created - Tuesday-November-12-2019   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table AM_PATIENT_CLASS
--------------------------------------------------------

  CREATE TABLE "IBAEHIS"."AM_PATIENT_CLASS" 
   (	"PATIENT_CLASS" VARCHAR2(2 CHAR), 
	"LONG_DESC" VARCHAR2(30 CHAR), 
	"SHORT_DESC" VARCHAR2(15 CHAR), 
	"PREFIX_NO" NUMBER(2,0), 
	"ADDED_BY_ID" VARCHAR2(30 CHAR) DEFAULT USER, 
	"ADDED_DATE" DATE DEFAULT SYSDATE, 
	"ADDED_AT_WS_NO" VARCHAR2(30 CHAR), 
	"ADDED_FACILITY_ID" VARCHAR2(2 CHAR), 
	"MODIFIED_BY_ID" VARCHAR2(30 CHAR) DEFAULT USER, 
	"MODIFIED_DATE" DATE DEFAULT SYSDATE, 
	"MODIFIED_AT_WS_NO" VARCHAR2(30 CHAR), 
	"MODIFIED_FACILITY_ID" VARCHAR2(2 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "EHIS_DATA" ;
REM INSERTING into IBAEHIS.AM_PATIENT_CLASS
SET DEFINE OFF;
Insert into IBAEHIS.AM_PATIENT_CLASS (PATIENT_CLASS,LONG_DESC,SHORT_DESC,PREFIX_NO,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) values ('IP','Inpatient','Inpatient',20,'IBAEHIS',to_date('01-AUG-09','DD-MON-RR'),'DFLTWSNO','DF','IBAEHIS',to_date('01-AUG-09','DD-MON-RR'),'DFLTWSNO','DF');
Insert into IBAEHIS.AM_PATIENT_CLASS (PATIENT_CLASS,LONG_DESC,SHORT_DESC,PREFIX_NO,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) values ('OP','Outpatient','Outpatient',10,'IBAEHIS',to_date('01-AUG-09','DD-MON-RR'),'DFLTWSNO','DF','IBAEHIS',to_date('01-AUG-09','DD-MON-RR'),'DFLTWSNO','DF');
Insert into IBAEHIS.AM_PATIENT_CLASS (PATIENT_CLASS,LONG_DESC,SHORT_DESC,PREFIX_NO,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) values ('XT','External','External',60,'IBAEHIS',to_date('01-AUG-09','DD-MON-RR'),'DFLTWSNO','DF','IBAEHIS',to_date('01-AUG-09','DD-MON-RR'),'DFLTWSNO','DF');
Insert into IBAEHIS.AM_PATIENT_CLASS (PATIENT_CLASS,LONG_DESC,SHORT_DESC,PREFIX_NO,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) values ('EM','Emergency','Emergency',30,'IBAEHIS',to_date('01-AUG-09','DD-MON-RR'),'DFLTWSNO','DF','IBAEHIS',to_date('01-AUG-09','DD-MON-RR'),'DFLTWSNO','DF');
Insert into IBAEHIS.AM_PATIENT_CLASS (PATIENT_CLASS,LONG_DESC,SHORT_DESC,PREFIX_NO,ADDED_BY_ID,ADDED_DATE,ADDED_AT_WS_NO,ADDED_FACILITY_ID,MODIFIED_BY_ID,MODIFIED_DATE,MODIFIED_AT_WS_NO,MODIFIED_FACILITY_ID) values ('DC','Daycare','Daycare',40,'IBAEHIS',to_date('01-AUG-09','DD-MON-RR'),'DFLTWSNO','DF','IBAEHIS',to_date('01-AUG-09','DD-MON-RR'),'DFLTWSNO','DF');
--------------------------------------------------------
--  DDL for Index AM_PATIENT_CLASS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "IBAEHIS"."AM_PATIENT_CLASS_PK" ON "IBAEHIS"."AM_PATIENT_CLASS" ("PATIENT_CLASS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "EHIS_DATA" ;
--------------------------------------------------------
--  DDL for Trigger AM_PATIENT_CLASS_LT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IBAEHIS"."AM_PATIENT_CLASS_LT" 
  AFTER INSERT OR DELETE OR UPDATE OF LONG_DESC, SHORT_DESC
  ON AM_PATIENT_CLASS
  REFERENCING NEW AS NEW OLD AS OLD 
  FOR EACH ROW 
DECLARE 
  CURSOR LANG_CUR IS
  SELECT LANGUAGE_ID, PRIMARY_LANG_YN FROM SM_LANGUAGE
   WHERE EFF_STATUS = 'E';
  EXIST_YN VARCHAR2(1) := 'N'; 
BEGIN 
  IF INSERTING THEN  
    FOR I IN LANG_CUR LOOP 
      INSERT INTO SM_OTH_LANG_DATA_SKEY
        ( LANGUAGE_ID  
        , TABLE_ID 
        , PK_VALUE
        , DESC1_VALUE
        , DESC2_VALUE
        , ADDED_BY_ID, ADDED_DATE, ADDED_AT_WS_NO
        , MODIFIED_BY_ID, MODIFIED_DATE, MODIFIED_AT_WS_NO
        , ADDED_FACILITY_ID, MODIFIED_FACILITY_ID
        ) 
      VALUES 
        ( I.LANGUAGE_ID 
        , 'AM_PATIENT_CLASS'
        , :NEW.PATIENT_CLASS
        , DECODE(I.PRIMARY_LANG_YN, 'Y', :NEW.LONG_DESC, NULL)
        , DECODE(I.PRIMARY_LANG_YN, 'Y', :NEW.SHORT_DESC, NULL)
        , :NEW.ADDED_BY_ID, :NEW.ADDED_DATE, :NEW.ADDED_AT_WS_NO
        , :NEW.MODIFIED_BY_ID, :NEW.MODIFIED_DATE, :NEW.MODIFIED_AT_WS_NO
        , :NEW.ADDED_FACILITY_ID, :NEW.MODIFIED_FACILITY_ID
      );
    END LOOP;
  ELSIF UPDATING THEN
    FOR I IN LANG_CUR LOOP
      BEGIN  
        EXIST_YN := 'N';
        SELECT 'Y' INTO EXIST_YN
          FROM SM_OTH_LANG_DATA_SKEY
         WHERE LANGUAGE_ID = I.LANGUAGE_ID
           AND TABLE_ID = 'AM_PATIENT_CLASS'
           AND PK_VALUE = :NEW.PATIENT_CLASS;
        IF I.PRIMARY_LANG_YN = 'Y' THEN
          UPDATE SM_OTH_LANG_DATA_SKEY
             SET 
                 DESC1_VALUE = :NEW.LONG_DESC,
                 DESC2_VALUE = :NEW.SHORT_DESC,
                 MODIFIED_BY_ID = :NEW.MODIFIED_BY_ID
               , MODIFIED_DATE  = :NEW.MODIFIED_DATE
               , MODIFIED_AT_WS_NO = :NEW.MODIFIED_AT_WS_NO
               , MODIFIED_FACILITY_ID = :NEW.MODIFIED_FACILITY_ID
           WHERE LANGUAGE_ID = I.LANGUAGE_ID  
             AND TABLE_ID = 'AM_PATIENT_CLASS'
             AND PK_VALUE = :NEW.PATIENT_CLASS;
        END IF; 
      EXCEPTION  
        WHEN NO_DATA_FOUND THEN 
          INSERT INTO SM_OTH_LANG_DATA_SKEY
            ( LANGUAGE_ID
            , TABLE_ID
            , PK_VALUE
            , DESC1_VALUE
            , DESC2_VALUE
            , ADDED_BY_ID, ADDED_DATE, ADDED_AT_WS_NO
            , MODIFIED_BY_ID, MODIFIED_DATE, MODIFIED_AT_WS_NO
            , ADDED_FACILITY_ID, MODIFIED_FACILITY_ID
            )
          VALUES
            ( I.LANGUAGE_ID 
            , 'AM_PATIENT_CLASS'
            , :NEW.PATIENT_CLASS
            , DECODE(I.PRIMARY_LANG_YN, 'Y', :NEW.LONG_DESC,NULL)
            , DECODE(I.PRIMARY_LANG_YN, 'Y', :NEW.SHORT_DESC,NULL)
            , :NEW.ADDED_BY_ID, :NEW.ADDED_DATE, :NEW.ADDED_AT_WS_NO
            , :NEW.MODIFIED_BY_ID, :NEW.MODIFIED_DATE, :NEW.MODIFIED_AT_WS_NO
            , :NEW.ADDED_FACILITY_ID, :NEW.MODIFIED_FACILITY_ID
          );
      END;
    END LOOP;
  ELSE
    DELETE SM_OTH_LANG_DATA_SKEY
     WHERE LANGUAGE_ID = LANGUAGE_ID 
       AND TABLE_ID = 'AM_PATIENT_CLASS'
       AND PK_VALUE = :OLD.PATIENT_CLASS; 
  END IF;
END AM_PATIENT_CLASS_LT;
/
ALTER TRIGGER "IBAEHIS"."AM_PATIENT_CLASS_LT" ENABLE;
--------------------------------------------------------
--  Constraints for Table AM_PATIENT_CLASS
--------------------------------------------------------

  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" MODIFY ("PATIENT_CLASS" NOT NULL ENABLE);
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" MODIFY ("LONG_DESC" NOT NULL ENABLE);
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" MODIFY ("SHORT_DESC" NOT NULL ENABLE);
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" MODIFY ("ADDED_BY_ID" NOT NULL ENABLE);
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" MODIFY ("ADDED_DATE" NOT NULL ENABLE);
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" MODIFY ("ADDED_AT_WS_NO" NOT NULL ENABLE);
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" MODIFY ("ADDED_FACILITY_ID" NOT NULL ENABLE);
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" MODIFY ("MODIFIED_BY_ID" NOT NULL ENABLE);
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" MODIFY ("MODIFIED_DATE" NOT NULL ENABLE);
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" MODIFY ("MODIFIED_AT_WS_NO" NOT NULL ENABLE);
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" MODIFY ("MODIFIED_FACILITY_ID" NOT NULL ENABLE);
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" ADD CONSTRAINT "AM_PATIENT_CLASS_PK" PRIMARY KEY ("PATIENT_CLASS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "EHIS_DATA"  ENABLE;
  ALTER TABLE "IBAEHIS"."AM_PATIENT_CLASS" ADD CONSTRAINT "AM_PATIENT_CLASS_C1" CHECK ( PATIENT_CLASS IN ('OP','IP','PA','EM','DC','NB','LO','XT','EA')) ENABLE;
